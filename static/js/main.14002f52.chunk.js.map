{"version":3,"sources":["App/External.module.css","components/Card.tsx","components/Divider.tsx","components/Lines.tsx","App/history.ts","GetStarted/index.tsx","UseValue/index.tsx","UseLoading/api.ts","UseLoading/index.tsx","UseError/api.ts","UseError/index.tsx","SharedValue/api.ts","SharedValue/load.ts","SharedValue/Display1.tsx","SharedValue/Display2.tsx","SharedValue/index.tsx","ClassComponent/index.tsx","AdvancedLoading/index.tsx","RESTful/mockList.ts","RESTful/index.tsx","SWR/mock.ts","SWR/index.tsx","Form/index.tsx","AsyncValidate/api.ts","AsyncValidate/index.tsx","LocalStorageRegion/index.tsx","MappedRegion/index.tsx","App/routes.ts","App/codeRegion.tsx","App/Editor.tsx","App/External.tsx","App/AppLayout.tsx","App/index.tsx","index.ts"],"names":["module","exports","Card","children","rest","style","margin","Divider","height","Lines","lines","map","f","index","key","history","createBrowserHistory","IconFont","createFromIconfontCN","scriptUrl","GetStarted","padding","fontSize","href","GithubOutlined","type","region","createRegion","handleChange","e","set","target","value","Component","useValue","width","onChange","apiGetUser","Promise","resolve","setTimeout","faker","name","lastName","firstName","loadUser","load","loading","useLoading","onClick","apiGetUserResolved","apiGetUserRejected","reject","Error","lorem","word","loadUserResolved","loadUserRejected","error","useError","fetchTime","useFetchTime","title","bordered","Item","label","message","Date","toString","apiGetNextFollower","userRegion","followerRegion","loadBy","loadFollower","state","result","push","slice","clearFollower","reset","useUser","useFollower","userLoading","followerLoading","extra","Display","user","follower","ComponentIn","display","Display1","Display2","ClassComponent","this","props","withValue","leftPartRegion","rightPartRegion","fetch","handleLeft","handleRight","LeftPart","RightPart","SomethingIsLoading","loadingLeft","loadingRight","disabled","Parent","useEffect","spinning","list","0","id","1","factory","func","item","getList","postList","putList","patchList","Object","assign","deleteList","listRegion","handleGet","handlePost","handlePutBy","handlePatchBy","handleDeleteBy","countA","fetchA","countB","fetchB","createMappedRegion","loadA","loadB","combinedRegion","a","b","c","d","setKeyValue","handleInput","handleRadio","handleCheckBox","FormCard","checked","Group","options","Result","String","join","Panel","fetchValidate","Number","asyncValidateRegion","AsyncValidate","validateStatus","getValidateStatus","errorMessage","hasFeedback","help","placeholder","localStorageRegion","createLocalStorageRegion","LocalStorageRegion","issueKeyListRegion","issueRegion","newIssue","random","uuid","creator","createdTime","date","recent","toISOString","status","sentence","loadIssueList","times","issue","useIssue","TitleField","statusColorMap","StatusLabel","borderRadius","textAlign","color","backgroundColor","CreatorName","FieldText","toLocaleString","columns","dataIndex","render","groupName","UseValue","UseLoading","UseError","issueKeyList","rowKey","dataSource","pagination","SharedValue","AdvancedLoading","formattedList","entity","array","keys","forEach","deNormalize","rel","header","footer","renderItem","nextItem","flex","useState","current","setCurrent","handleClickA","useCallback","handleClickB","Form","codeRegion","getWindowSize","window","innerWidth","innerHeight","outerWidth","outerHeight","Editor","selectedKey","size","setSize","updateWindowSize","addEventListener","removeEventListener","useWindowSize","code","request","Request","then","res","text","loadCode","language","theme","External","codeLoading","gotoDefinitionClass","styles","dark","className","container","selectedKeyRegion","hash","location","initSelectKey","defaultSelectKey","get","routes","undefined","find","initSelectedKey","replace","MenuItem","menuElements","routeGroups","groupBy","entries","routeList","routeElements","length","SubMenu","getMenuElements","AppLayout","route","Sider","overflowY","mode","defaultOpenKeys","selectedKeys","minHeight","borderRight","Content","app","document","getElementById"],"mappings":"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","file":"static/js/main.14002f52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"External_container__3t52A\",\"code\":\"External_code__CR0le\",\"dark\":\"External_dark__2BAR1\"};","import React, { FC } from 'react';\nimport { Card as AntdCard } from 'antd';\n\nconst Card: FC<any> = ({ children, ...rest }) => (\n  <AntdCard style={{ margin: 30 }} {...rest}>{children}</AntdCard>\n);\n\nexport default Card;\n","import React from 'react';\n\nconst Divider = () => <div style={{ height: 10 }} />;\n\nexport default Divider;\n","import React, { Fragment, FC } from 'react';\n\nconst Lines: FC<{lines: string[]}> = ({ lines }) => (\n  <Fragment>\n    {lines && lines.map((f, index) => <p key={index || 0}>{f}</p>)}\n  </Fragment>\n);\n\nexport default Lines;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from 'react';\nimport { createFromIconfontCN, GithubOutlined } from '@ant-design/icons';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_942570_3ol64gksd4x.js',\n});\n\nconst pre = ''\n  + 'git clone https://github.com/regionjs/region-core.git\\n'\n  + 'cd example\\n'\n  + 'npm i\\n'\n  + 'npm start\\n';\n\nconst GetStarted = () => (\n  <div style={{ padding: 32 }}>\n    <h1>How to run this</h1>\n    <pre>{pre}</pre>\n    <h1>Related</h1>\n    <div style={{ fontSize: 18 }}>\n      <a href=\"https://github.com/regionjs/region-core\"><GithubOutlined /> Github</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://www.npmjs.com/package/region-core\"><IconFont type=\"npm\" /> npm</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://github.com/regionjs/region-core/blob/master/docs/Document.md\"><IconFont type=\"docs\" /> Docs</a>\n    </div>\n  </div>\n);\n\nexport default GetStarted;\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nconst Component = () => {\n  const value = region.useValue();\n  return (\n    <Card>\n      {value}\n      <Divider/>\n      <Input style={{ width: 300 }} value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default Component;\n","import faker from 'faker';\n\nexport const apiGetUser = () => new Promise(resolve => setTimeout(() => {\n  resolve(`${faker.name.lastName()} ${faker.name.firstName()}`);\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion();\n\nconst loadUser = () => region.load(apiGetUser);\n\n// application initial\nloadUser();\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n\n  return (\n    <Card loading={loading}>\n      User: {value}\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","import faker from \"faker\";\n\nexport const apiGetUserResolved = () => new Promise((resolve) => setTimeout(() => {\n  resolve(`${faker.name.lastName()} ${faker.name.firstName()}`);\n}, 1000));\n\nexport const apiGetUserRejected = () => new Promise((resolve, reject) => setTimeout(() => {\n  reject(new Error(faker.lorem.word()));\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport {Descriptions, Button, Spin, Space} from 'antd';\nimport { Card, Divider } from '../components';\nimport { apiGetUserResolved, apiGetUserRejected } from './api';\n\nconst region = createRegion<string>();\n\n// apiGetUser may reject\nconst loadUserResolved = () => region.load(apiGetUserResolved);\nconst loadUserRejected = () => region.load(apiGetUserRejected);\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n  const error = region.useError();\n  const fetchTime = region.useFetchTime() || 0;\n\n  return (\n    <Card>\n      {loading ? <Spin /> : (\n        <Descriptions title=\"User Info\" bordered>\n          <Descriptions.Item label=\"Value\">{value}</Descriptions.Item>\n          <Descriptions.Item label=\"Error\">{error ? error.message : ''}</Descriptions.Item>\n          <Descriptions.Item label=\"FetchTime\">{new Date(fetchTime).toString()}</Descriptions.Item>\n        </Descriptions>\n      )}\n      <Divider />\n      <Space>\n        <Button onClick={loadUserResolved}>loadUser(Resolved)</Button>\n        <Button onClick={loadUserRejected}>loadUser(Rejected)</Button>\n      </Space>\n    </Card>\n  );\n};\n\nexport default Component;\n","import faker from 'faker';\n\nexport const apiGetUser = (): Promise<string> => new Promise((resolve) => setTimeout(() => {\n  resolve(`${faker.name.lastName()} ${faker.name.firstName()}`);\n}, 500));\n\nexport const apiGetNextFollower = (): Promise<string> => new Promise((resolve) => setTimeout(() => {\n  resolve(`${faker.name.lastName()} ${faker.name.firstName()}`);\n}, 1000));\n","import { createRegion } from 'region-core';\nimport { apiGetUser, apiGetNextFollower } from './api';\n\nconst userRegion = createRegion<string>();\nconst followerRegion = createRegion<string[]>([]);\n\nexport const loadUser = userRegion.loadBy(apiGetUser);\n\nexport const loadFollower = () => followerRegion.load(\n  apiGetNextFollower,\n  (state = [], result) => {\n    state.push(result);\n    return state.slice();\n  },\n);\n\nexport const clearFollower = followerRegion.reset;\n\nexport const useUser = userRegion.useValue;\n\nexport const useFollower = followerRegion.useValue;\n\nexport const useLoading = () => {\n  const userLoading = userRegion.useLoading();\n  const followerLoading = followerRegion.useLoading();\n  return userLoading || followerLoading;\n};\n","import React from 'react';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, useLoading, useUser, useFollower } from './load';\n\nconst extra = <Button type=\"link\" onClick={loadFollower}>More</Button>;\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      loading={loading}\n      title={user}\n      extra={extra}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport { Space } from 'antd';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, clearFollower, useLoading, useUser, useFollower } from './load';\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      title={user}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n      <Space>\n        <Button loading={loading} onClick={loadFollower}>More</Button>\n        <Button loading={loading} onClick={clearFollower}>Clear</Button>\n      </Space>\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport Display1 from './Display1';\nimport Display2 from './Display2';\nimport { loadFollower, loadUser } from './load';\n\nloadUser();\nloadFollower();\n\nconst Component = () => (\n  <div style={{ display: 'flex' }}>\n    <Display1 />\n    <Display2 />\n  </div>\n);\n\nexport default Component;\n","import React, { Component } from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nclass ClassComponent extends Component<{value: string}> {\n  render() {\n    const { value } = this.props;\n    return (\n     <Card>\n       {value}\n       <Divider/>\n       <Input value={value} onChange={handleChange} />\n     </Card>\n    );\n  }\n}\n\nconst withValue = (ComponentIn: any) => {\n  const ComponentOut = (props: any) => {\n    const value = region.useValue();\n    return <ComponentIn value={value} {...props}/>;\n  };\n  return ComponentOut;\n};\n\nexport default withValue(ClassComponent);\n","import React, {useEffect} from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Spin, Card, Divider } from '../components';\n\nconst leftPartRegion = createRegion<null>();\nconst rightPartRegion = createRegion<null>();\n\nconst fetch = (): Promise<null> => new Promise(resolve => setTimeout(() => resolve(null), 1000));\n\nconst handleLeft = () => leftPartRegion.load(fetch);\n\nconst handleRight = () => rightPartRegion.load(fetch);\n\nconst LeftPart = () => {\n  const loading = leftPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleLeft}>Load Left Part</Button>;\n};\n\nconst RightPart = () => {\n  const loading = rightPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleRight}>Load Right Part</Button>;\n};\n\nconst SomethingIsLoading = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n  return <Button loading={loadingLeft || loadingRight} disabled>Something is loading</Button>;\n};\n\nconst Parent = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n\n  useEffect(\n    () => {\n      handleLeft();\n      handleRight();\n    },\n    []\n  )\n\n  return (\n    <Card>\n      <Spin spinning={loadingLeft && loadingRight}>\n        <LeftPart />\n        <Divider />\n        <RightPart />\n        <Divider />\n        <SomethingIsLoading />\n      </Spin>\n    </Card>\n  );\n};\nexport default Parent;\n","interface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\n\nconst list: Shape = {\n  0: { id: 0, value: 0 },\n  1: { id: 1, value: 1 },\n};\nlet index = 2;\n\nconst factory = <T, R>(func: (v: T) => R) => (item: T): Promise<R> => new Promise((resolve) => {\n  setTimeout(() => { resolve(func(item)); }, 500);\n});\n\nexport const getList = factory(() => list);\n\nexport const postList = factory(() => {\n  const item = { id: index, value: index };\n  list[index] = item;\n  index += 1;\n  return item;\n});\n\nexport const putList = factory(((item: Item) => {\n  list[item.id] = item;\n  return list[item.id];\n}));\n\nexport const patchList = factory((item: Item) => {\n  list[item.id] = Object.assign(list[item.id], item);\n  return list[item.id];\n});\n\nexport const deleteList = factory((id: number) => {\n  delete list[id];\n  return null;\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Space } from 'antd';\nimport { Button, List, Card } from '../components';\nimport { getList, postList, putList, patchList, deleteList } from './mockList';\n\ninterface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\nconst listRegion = createRegion<Shape>();\nlistRegion.load(getList);\n\n/* eslint-disable no-param-reassign */\nconst handleGet = listRegion.loadBy(getList);\n\nconst handlePost = listRegion.loadBy(\n  postList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePutBy = listRegion.loadBy(\n  putList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePatchBy = listRegion.loadBy(\n  patchList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handleDeleteBy = listRegion.loadBy(\n  deleteList,\n  (state = {}, result, id) => {\n    delete state[id];\n    return state;\n  },\n);\n/* eslint-enable no-param-reassign */\n\nconst deNormalize = (entity = {}) => {\n  const array: any[] = [];\n  Object.keys(entity).forEach((key) => {\n    // @ts-ignore\n    const item = entity[key];\n    array.push(item);\n  });\n  return array;\n};\n\nexport default () => {\n  const loading = listRegion.useLoading();\n  const list = listRegion.useValue();\n  const formattedList = deNormalize(list);\n  return (\n    <Card>\n      <a\n        href={'https://en.wikipedia.org/wiki/Representational_state_transfer'}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        What is RESTful?\n      </a>\n      <List\n        loading={loading}\n        dataSource={formattedList}\n        header={<Button onClick={handleGet}>GET</Button>}\n        footer={<Button onClick={handlePost}>POST</Button>}\n        renderItem={\n          (item) => {\n            const nextItem = { id: item.id, value: item.value + 1 };\n            const handlePut = () => handlePutBy(nextItem);\n            const handlePatch = () => handlePatchBy(nextItem);\n            const handleDelete = () => handleDeleteBy(item.id);\n            return (\n              <List.Item>\n                <span style={{ flex: 1 }}>{item.value}</span>\n                <Space>\n                  <Button onClick={handlePut}>PUT</Button>\n                  <Button onClick={handlePatch}>PATCH</Button>\n                  <Button onClick={handleDelete}>DELETE</Button>\n                </Space>\n              </List.Item>\n            );\n          }\n        }\n      />\n    </Card>\n  );\n};\n","const factory = <O>(func: () => O) => (): Promise<O> => new Promise((resolve) => {\n  setTimeout(() => { resolve(func()); }, 500);\n});\n\nlet countA = 0;\nexport const fetchA = factory(() => {\n  countA += 1;\n  return `A${countA}`;\n});\n\nlet countB = 0;\nexport const fetchB = factory(() => {\n  countB += 1;\n  return `B${countB}`;\n});\n","import React, {useCallback, useState} from 'react';\nimport { createMappedRegion } from 'region-core';\nimport { Space } from 'antd';\nimport { Button, Card, Divider } from '../components';\nimport { fetchA, fetchB } from './mock';\n\ntype Key = 'A' | 'B'\n\nconst region = createMappedRegion<Key, unknown>();\nconst loadA = region.loadBy('A', fetchA);\nconst loadB = region.loadBy('B', fetchB);\n\nexport default () => {\n  const [current, setCurrent] = useState<'A' | 'B'>('A');\n  const value = region.useValue(current);\n  const handleClickA = useCallback(\n    () => {\n      setCurrent('A');\n      loadA()\n    },\n    []\n  )\n  const handleClickB = useCallback(\n    () => {\n      setCurrent('B');\n      loadB();\n    },\n    []\n  )\n  return (\n    <Card>\n      <p>\n        {'stale-while-revalidate is a cache invalidation strategy popularized by '}\n        <a\n          href={'https://tools.ietf.org/html/rfc5861'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          HTTP RFC 5861\n        </a>\n      </p>\n      <Space>\n        <Button onClick={handleClickA}>loadA</Button>\n        <Button onClick={handleClickB}>loadB</Button>\n      </Space>\n      <Divider />\n      {value}\n    </Card>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Switch, Radio, Checkbox, Card, Divider } from '../components';\nimport {Descriptions} from \"antd\";\n\ninterface Shape {\n  a: boolean;\n  b: string;\n  c: string;\n  d: string[];\n}\nconst combinedRegion = createRegion<Shape>({a: false, b: '', c: '', d: []});\n\nconst setKeyValue = (key: any, value: any) => {\n  combinedRegion.set((state) => ({...state, [key]: value}))\n}\n\nconst handleChange = (value: boolean) => setKeyValue('a', value);\nconst handleInput = (e: any) => setKeyValue('b', e.target.value);\nconst handleRadio = (e: any) => setKeyValue('c', e.target.value);\nconst handleCheckBox = (value: any[]) => setKeyValue('d', value);\n\nconst FormCard = () => {\n  const { a, b, c, d } = combinedRegion.useValue();\n  return (\n    <Card>\n      <Switch checked={a} onChange={handleChange} />\n      <Divider />\n      <Input value={b} onChange={handleInput} />\n      <Divider />\n      <Radio.Group value={c} onChange={handleRadio} options={['Hangzhou', 'Shanghai', 'Beijing', 'Chengdu']} />\n      <Divider />\n      <Checkbox.Group options={['Apple', 'Pear', 'Orange']} value={d} onChange={handleCheckBox} />\n    </Card>\n  );\n};\n\nconst Result = () => {\n  const { a, b, c, d } = combinedRegion.useValue();\n  return (\n    <Card>\n      <Descriptions title=\"User Info\" bordered>\n        <Descriptions.Item label=\"A\">{String(a)}</Descriptions.Item>\n        <Descriptions.Item label=\"B\">{b}</Descriptions.Item>\n        <Descriptions.Item label=\"C\">{c}</Descriptions.Item>\n        <Descriptions.Item label=\"D\">{d.join(', ')}</Descriptions.Item>\n      </Descriptions>\n    </Card>\n  );\n};\n\nconst Panel = () => <Fragment><FormCard /><Result /></Fragment>;\n\nexport default Panel;\n","export const fetchValidate = (value: string): Promise<string> => new Promise((resolve, reject) => {\n  setTimeout(\n    () => {\n      if (String(Number(value)) === value) {\n        resolve(value);\n      } else {\n        reject(new Error('message from api: type some number'));\n      }\n    },\n    1000,\n  );\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Form, Input, Card } from '../components';\nimport { fetchValidate } from './api';\n\nconst asyncValidateRegion = createRegion<string>('');\n\nconst loadValidate = (value: string) => {\n  asyncValidateRegion.set(value);\n  asyncValidateRegion.loadBy(fetchValidate)(value);\n};\n\nconst handleChange = (e: any) => loadValidate(e.target.value);\n\nconst getValidateStatus = ({ loading, error, value }: any) => {\n  if (value === '') {\n    return undefined;\n  }\n  if (loading) {\n    return 'validating';\n  }\n  if (error) {\n    return 'error';\n  }\n  return 'success';\n};\n\nconst AsyncValidate = () => {\n  const loading = asyncValidateRegion.useLoading();\n  const error = asyncValidateRegion.useError();\n  const value = asyncValidateRegion.useValue();\n  const validateStatus = getValidateStatus({ loading, error, value });\n  const errorMessage = error && error.message;\n  // TODO fix error occurs\n  return (\n    <Card>\n      <Form.Item\n        hasFeedback\n        validateStatus={validateStatus}\n        help={validateStatus === 'validating' ? 'validating...' : errorMessage}\n      >\n        <Input\n          placeholder=\"type some number\"\n          value={value}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    </Card>\n  );\n};\n\nexport default AsyncValidate;\n","import React from 'react';\nimport { createLocalStorageRegion } from 'region-core';\nimport { Input, Card } from '../components';\n\nconst localStorageRegion = createLocalStorageRegion('localStorage-key', 'some value stored in localStorage');\n\nconst handleChange = (e: any) => localStorageRegion.set(e.target.value);\n\nconst LocalStorageRegion = () => {\n  const value = localStorageRegion.useValue();\n  return (\n    <Card>\n      <Input value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default LocalStorageRegion;\n","import React, {useEffect, VFC} from 'react';\nimport {random, times} from 'lodash';\nimport {Table} from 'antd';\nimport {createMappedRegion, createRegion} from \"region-core\";\nimport faker from \"faker\";\nimport { Card } from '../components';\n\ninterface IssueKey {\n  id: string;\n}\n\ninterface Issue {\n  id: string;\n  title: string;\n  status: string;\n  creator: string;\n  createdTime: string;\n}\n\nconst issueKeyListRegion = createRegion<IssueKey[]>([]);\nconst issueRegion = createMappedRegion<string, Issue>()\n\nconst newIssue = (): Issue => ({\n  id: faker.random.uuid(),\n  creator: `${faker.name.lastName()} ${faker.name.firstName()}`,\n  createdTime: faker.date.recent(30).toISOString(),\n  status: ['New', 'Assigned', 'In Progress', 'Completed', 'Abandoned'][random(4)],\n  title: faker.lorem.sentence(),\n})\n\nconst apiGetIssueList = (): Promise<Issue[]> => Promise.resolve(times(20, newIssue))\n\nconst loadIssueList = issueKeyListRegion.loadBy(\n  apiGetIssueList,\n  (state, result) => {\n    return result.map(issue => {\n      issueRegion.set(issue.id, issue);\n      return {id: issue.id};\n    })\n  }\n)\n\nconst useIssue = issueRegion.useValue\n\nconst TitleField: VFC<IssueKey> = ({id}) => {\n  const issue = useIssue(id);\n\n  return <>{issue?.title}</>;\n};\n\nconst statusColorMap = {\n  'New': '#989898',\n  'Assigned': '#78cc52',\n  'In Progress': '#dbae03',\n  'Completed': '#5c6c9b',\n  'Abandoned': '#cc5256',\n}\n\nconst StatusLabel: VFC<IssueKey> = ({id}) => {\n  const issue = useIssue(id);\n\n  return (\n    <div\n      style={{\n        padding: '4px 10px',\n        borderRadius: 4,\n        width: 100,\n        textAlign: 'center',\n        color: '#fff',\n        // @ts-ignore\n        backgroundColor: statusColorMap[issue?.status],\n      }}\n    >\n      {issue?.status}\n    </div>\n  );\n};\n\nconst CreatorName: VFC<IssueKey> = ({id}) => {\n  const issue = useIssue(id);\n\n  return <>{issue?.creator}</>;\n};\n\nconst FieldText: VFC<IssueKey> = ({id}) => {\n  const issue = useIssue(id);\n\n  // @ts-ignore\n  return <>{new Date(issue?.createdTime).toLocaleString()}</>;\n};\n\nconst columns = [\n  {\n    title: 'Title',\n    key: 'title',\n    dataIndex: 'id',\n    render: (id: string) => <TitleField id={id} />,\n  },\n  {\n    title: 'Status',\n    key: 'status',\n    dataIndex: 'id',\n    render: (id: string) => <StatusLabel id={id} />,\n  },\n  {\n    title: 'Created By',\n    key: 'creatorBy',\n    dataIndex: 'id',\n    render: (id: string) => <CreatorName id={id} />,\n  },\n  {\n    title: 'Created At',\n    key: 'creatorAt',\n    dataIndex: 'id',\n    render: (id: string) => <FieldText id={id} />,\n  },\n];\n\nconst App: VFC = () => {\n  const loading = issueKeyListRegion.useLoading();\n  const issueKeyList = issueKeyListRegion.useValue();\n\n  useEffect(\n    () => {\n      loadIssueList();\n    },\n    []\n  );\n\n  return (\n    <Card>\n      <Table<IssueKey>\n        rowKey=\"id\"\n        loading={loading}\n        columns={columns}\n        dataSource={issueKeyList}\n        pagination={false}\n      />\n    </Card>\n  );\n};\n\nexport default App;\n","import GetStarted from '../GetStarted';\nimport UseValue from '../UseValue';\nimport UseLoading from '../UseLoading';\nimport UseError from '../UseError';\nimport SharedValue from '../SharedValue';\nimport ClassComponent from '../ClassComponent';\nimport AdvancedLoading from '../AdvancedLoading';\nimport RESTful from '../RESTful';\nimport SWR from '../SWR';\nimport Form from '../Form';\nimport AsyncValidate from '../AsyncValidate';\nimport LocalStorageRegion from '../LocalStorageRegion';\nimport MappedRegion from '../MappedRegion';\n\nexport default [{\n  key: 'GetStarted',\n  label: 'Get Started',\n  groupName: 'GetStarted',\n  Component: GetStarted,\n}, {\n  key: 'UseValue',\n  label: 'useValue',\n  groupName: 'Basic',\n  Component: UseValue,\n}, {\n  key: 'UseLoading',\n  label: 'useLoading',\n  groupName: 'Basic',\n  Component: UseLoading,\n}, {\n  key: 'UseError',\n  label: 'useError',\n  groupName: 'Basic',\n  Component: UseError,\n}, {\n  key: 'LocalStorageRegion',\n  label: 'localStorage',\n  groupName: 'Basic',\n  Component: LocalStorageRegion,\n}, {\n  key: 'MappedRegion',\n  label: 'mappedRegion',\n  groupName: 'Basic',\n  Component: MappedRegion,\n}, {\n  key: 'SharedValue',\n  label: 'Shared Value',\n  groupName: 'Advanced',\n  Component: SharedValue,\n}, {\n  key: 'AdvancedLoading',\n  label: 'Advanced Loading',\n  groupName: 'Advanced',\n  Component: AdvancedLoading,\n}, {\n  key: 'ClassComponent',\n  label: 'Class Component',\n  groupName: 'Advanced',\n  Component: ClassComponent,\n}, {\n  key: 'RESTful',\n  label: 'RESTful',\n  groupName: 'Advanced',\n  Component: RESTful,\n}, {\n  key: 'SWR',\n  label: 'SWR',\n  groupName: 'Advanced',\n  Component: SWR,\n}, {\n  key: 'AsyncValidate',\n  label: 'Async Validate',\n  groupName: 'Advanced',\n  Component: AsyncValidate,\n}, {\n  key: 'Form',\n  label: 'Form',\n  groupName: 'Advanced',\n  Component: Form,\n}];\n","import { createRegion } from 'region-core';\n\nexport const codeRegion = createRegion<string>('');\n\nexport const loadCode = (selectedKey: any) => {\n  const href = `https://raw.githubusercontent.com/regionjs/region-core/master/example/src/${selectedKey}/index.tsx`;\n  const request = new Request(href);\n  const fetcher = () => fetch(request).then(res => res.text());\n  codeRegion.load(fetcher);\n};\n","import React, { useState, useEffect } from 'react';\nimport MonacoEditor from 'react-monaco-editor';\nimport 'monaco-editor/esm/vs/basic-languages/javascript/javascript.contribution';\nimport { codeRegion, loadCode } from './codeRegion';\n\nconst getWindowSize = () => {\n  if (typeof window === 'undefined') {\n    throw new Error('window undefined');\n  }\n  return {\n    innerWidth: window.innerWidth,\n    innerHeight: window.innerHeight,\n    outerWidth: window.outerWidth,\n    outerHeight: window.outerHeight,\n  };\n};\n\nconst useWindowSize = () => {\n  // 窗口的尺寸事实上和页面内容是无关的，所以没必要等组件布局后再读，初始化的时候直接拿就好\n  const [size, setSize] = useState(getWindowSize);\n  useEffect(\n    () => {\n      const updateWindowSize = () => setSize(getWindowSize());\n      window.addEventListener('resize', updateWindowSize);\n      return () => window.removeEventListener('resize', updateWindowSize);\n    },\n    [],\n  );\n  return size;\n};\n\nconst Editor = ({ selectedKey }: any) => {\n  const { innerWidth } = useWindowSize();\n  const loading = codeRegion.useLoading();\n  const code = codeRegion.useValue();\n  useEffect(\n    () => {\n      loadCode(selectedKey);\n    },\n    [selectedKey],\n  );\n\n  if (loading) {\n    return null;\n  }\n\n  return (\n    <MonacoEditor\n      width={innerWidth - 260}\n      height={500}\n      language=\"javascript\"\n      theme=\"vs-dark\"\n      value={code}\n    />\n  );\n};\nexport default Editor;\n","import React from 'react';\nimport { GithubOutlined } from '@ant-design/icons';\nimport Editor from './Editor';\nimport styles from './External.module.css';\nimport { codeRegion } from './codeRegion';\n\nconst External = ({ selectedKey }: any) => {\n  const codeLoading = codeRegion.useLoading();\n  let gotoDefinitionClass = styles.code;\n  if (!codeLoading) {\n    gotoDefinitionClass = `${styles.code} ${styles.dark}`;\n  }\n  return (\n    <div className={styles.container}>\n      <div className={gotoDefinitionClass}>\n        <a\n          href={`https://github.com/regionjs/region-core/blob/master/example/src/${selectedKey}/index.tsx`}\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n        >\n          <GithubOutlined />\n        </a>\n      </div>\n      <Editor selectedKey={selectedKey} />\n    </div>\n  );\n};\n\nexport default External;\n","import React, { FC } from 'react';\nimport { createRegion } from 'region-core';\nimport { get, groupBy } from 'lodash';\nimport { Menu, Layout } from '../components';\nimport history from './history';\nimport routes from './routes';\nimport External from './External';\n\nconst initSelectedKey = () => {\n  const { hash } = history.location;\n  const initSelectKey = hash !== '' ? hash.slice(1) : null;\n  const defaultSelectKey = get(routes, ['0', 'key']);\n  if (!initSelectKey || routes.find(({ key }) => key === initSelectKey) === undefined) {\n    return defaultSelectKey;\n  }\n  return initSelectKey;\n};\n\nconst selectedKeyRegion = createRegion(initSelectedKey());\n\nconst defaultSelectKey = get(routes, ['0', 'key']);\n\nconst onClick = ({ key }: any) => {\n  history.replace(`#${key}`);\n  selectedKeyRegion.set(key);\n};\n\nconst MenuItem = ({ key, label }: any) => <Menu.Item key={key}>{label}</Menu.Item>;\n\nconst getMenuElements = () => {\n  const routeGroups = groupBy(routes, 'groupName');\n\n  return Object.entries(routeGroups).map(([groupName, routeList]) => {\n    const routeElements = routeList.map(MenuItem);\n    if (routeList.length === 1) {\n      return routeElements;\n    }\n    return (\n      <Menu.SubMenu key={groupName} title={groupName} >\n        {routeElements}\n      </Menu.SubMenu>\n    );\n  });\n  // routes.map(MenuItem);\n};\n\nconst menuElements = getMenuElements();\n\nconst AppLayout: FC = () => {\n  const selectedKey = selectedKeyRegion.useValue();\n  const route = routes.find(({ key }) => key === selectedKey);\n  if (!route) {\n    selectedKeyRegion.set(defaultSelectKey);\n    return null;\n  }\n  const { Component, groupName } = route;\n  return (\n    <Layout style={{ height: '100vh' }}>\n      <Layout.Sider width={200} theme=\"light\" style={{ overflowY: 'auto' }}>\n        <Menu\n          mode=\"inline\"\n          defaultOpenKeys={[groupName]}\n          selectedKeys={[selectedKey]}\n          onClick={onClick}\n          style={{ minHeight: '100%', borderRight: '1px solid #e8e8e8' }}\n        >\n          {menuElements}\n        </Menu>\n      </Layout.Sider>\n      <Layout.Content>\n        <Component />\n        {selectedKey !== 'GetStarted' && <External selectedKey={selectedKey} />}\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport AppLayout from './AppLayout';\n\nexport const app = <AppLayout />;\n","/* global document */\nimport { render } from 'react-dom';\nimport { app } from './App';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nrender(app, document.getElementById('root'));\n"],"sourceRoot":""}
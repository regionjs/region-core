{"version":3,"sources":["App/AppLayout.module.css","components/Card.tsx","components/Divider.tsx","components/Lines.tsx","App/history.ts","GetStarted/index.tsx","UseValue/index.tsx","UseLoading/index.tsx","UseLoading/api.ts","UseError/index.tsx","UseError/api.ts","SharedValue/api.ts","SharedValue/load.ts","SharedValue/Display1.tsx","SharedValue/Display2.tsx","SharedValue/index.tsx","ClassComponent/index.tsx","AdvancedLoading/index.tsx","RESTful/mockList.ts","RESTful/index.tsx","SWR/mock.ts","SWR/index.tsx","Form/index.tsx","AsyncValidate/api.ts","AsyncValidate/index.tsx","LocalStorageRegion/index.tsx","MappedRegion/index.tsx","App/routes.ts","App/codeRegion.tsx","App/External.tsx","App/AppLayout.tsx","App/index.tsx","index.ts","App/External.module.css"],"names":["module","exports","Card","children","rest","style","margin","Divider","height","Lines","lines","map","f","index","history","createBrowserHistory","IconFont","createFromIconfontCN","scriptUrl","GetStarted","padding","language","value","fontSize","href","GithubOutlined","type","region","createRegion","handleChange","e","set","target","Component","useValue","width","onChange","loadUser","loadBy","Promise","resolve","setTimeout","faker","name","lastName","firstName","loading","useLoading","onClick","loadUserResolved","loadUserRejected","reject","Error","lorem","word","error","useError","title","bordered","Item","label","message","apiGetNextFollower","userRegion","followerRegion","loadFollower","state","result","push","slice","clearFollower","reset","useUser","useFollower","userLoading","followerLoading","extra","Display","user","follower","ComponentIn","display","Display1","Display2","ClassComponent","this","props","withValue","leftPartRegion","rightPartRegion","fetch","handleLeft","handleRight","LeftPart","RightPart","SomethingIsLoading","loadingLeft","loadingRight","disabled","Parent","useEffect","spinning","list","id","delay","getList","a","postList","item","putList","patchList","Object","assign","deleteList","listRegion","load","handleGet","handlePost","handlePutBy","handlePatchBy","handleDeleteBy","formattedList","entity","array","keys","forEach","key","deNormalize","rel","dataSource","header","footer","renderItem","nextItem","flex","factory","func","countA","fetchA","countB","fetchB","createMappedRegion","loadA","loadB","useState","current","setCurrent","handleClickA","useCallback","handleClickB","combinedRegion","b","c","d","setKeyValue","handleInput","handleRadio","handleCheckBox","FormCard","checked","Group","options","Result","String","join","Panel","fetchValidate","Number","asyncValidateRegion","AsyncValidate","validateStatus","getValidateStatus","errorMessage","hasFeedback","help","placeholder","localStorageRegion","createLocalStorageRegion","LocalStorageRegion","issueKeyListRegion","issueRegion","newIssue","random","uuid","creator","createdTime","date","recent","toISOString","status","sentence","loadIssueList","times","issue","useIssue","TitleField","statusColorMap","New","Assigned","Completed","Abandoned","StatusLabel","borderRadius","textAlign","color","backgroundColor","CreatorName","FieldText","Date","toLocaleString","columns","dataIndex","render","routes","groupName","UseValue","UseLoading","UseError","issueKeyList","rowKey","pagination","SharedValue","AdvancedLoading","RESTful","SWR","Form","codeRegion","External","selectedKey","codeLoading","code","request","Request","promise","then","res","text","loadCode","className","styles","container","dark","selectedKeyRegion","hash","location","initSelectKey","defaultSelectKey","get","undefined","find","initSelectedKey","replace","MenuItem","menuElements","routeGroups","groupBy","entries","routeList","routeElements","length","SubMenu","getMenuElements","AppLayout","route","Sider","sider","mode","defaultOpenKeys","selectedKeys","minHeight","borderRight","Content","app","Refractor","registerLanguage","tsx","bash","document","getElementById"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,2B,iMCMpDC,EAJO,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,wBACpB,cAAC,IAAD,yBAAUC,MAAO,CAAEC,OAAQ,KAAUF,GAArC,aAA4CD,MCA/BI,EAFC,kBAAM,qBAAKF,MAAO,CAAEG,OAAQ,OCM7BC,EANsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnC,cAAC,WAAD,UACGA,GAASA,EAAMC,KAAI,SAACC,EAAGC,GAAJ,OAAc,4BAAqBD,GAAbC,GAAS,S,qGCAxCC,EAFCC,c,oBCEVC,EAAWC,YAAqB,CACpCC,UAAW,iDAwBEC,EAfI,kBACjB,sBAAKd,MAAO,CAAEe,QAAS,IAAvB,UACE,iDACA,cAAC,IAAD,CAAWC,SAAS,OAAOC,MATnB,0FAUR,yCACA,sBAAKjB,MAAO,CAAEkB,SAAU,IAAxB,UACE,oBAAGC,KAAK,0CAAR,UAAkD,cAACC,EAAA,EAAD,IAAlD,aACA,sBAAMpB,MAAO,CAAEC,OAAQ,YACvB,oBAAGkB,KAAK,4CAAR,UAAoD,cAAC,EAAD,CAAUE,KAAK,QAAnE,UACA,sBAAMrB,MAAO,CAAEC,OAAQ,YACvB,oBAAGkB,KAAK,uEAAR,UAA+E,cAAC,EAAD,CAAUE,KAAK,SAA9F,kBCpBAC,EAASC,YAAa,gBAEtBC,EAAe,SAACC,GAAD,OAAYH,EAAOI,IAAID,EAAEE,OAAOV,QAatCW,EAXG,WAChB,IAAMX,EAAQK,EAAOO,WACrB,OACE,eAAC,EAAD,WACGZ,EACD,cAAC,EAAD,IACA,cAAC,IAAD,CAAOjB,MAAO,CAAE8B,MAAO,KAAOb,MAAOA,EAAOc,SAAUP,Q,iBCTtDF,EAASC,cAETS,EAAWV,EAAOW,QCLE,kBAAM,IAAIC,SAAQ,SAACC,GAAD,OAAaC,YAAW,WAClED,EAAQ,GAAD,OAAIE,IAAMC,KAAKC,WAAf,YAA6BF,IAAMC,KAAKE,gBAC9C,WDMHR,IAEA,IAaeJ,EAbG,WAChB,IAAMa,EAAUnB,EAAOoB,aACjBzB,EAAQK,EAAOO,WAErB,OACE,eAAC,EAAD,CAAMY,QAASA,EAAf,mBACSxB,EACP,cAAC,EAAD,IACA,cAAC,IAAD,CAAQ0B,QAASX,EAAjB,0B,oBEdAV,EAASC,cAGTqB,EAAmBtB,EAAOW,QCPE,kBAAuB,IAAIC,SAC3D,SAACC,GAAD,OAAaC,YAAW,WACtBD,EAAQ,GAAD,OAAIE,IAAMC,KAAKC,WAAf,YAA6BF,IAAMC,KAAKE,gBAEjD,WDIIK,EAAmBvB,EAAOW,QCDE,kBAAuB,IAAIC,SAC3D,SAACC,EAASW,GAAV,OAAqBV,YAAW,WAC9BU,EAAO,IAAIC,MAAMV,IAAMW,MAAMC,WAE/B,WDqBarB,EAtBG,WAChB,IAAMa,EAAUnB,EAAOoB,aACjBzB,EAAQK,EAAOO,WACfqB,EAAQ5B,EAAO6B,WAErB,OACE,eAAC,EAAD,WACGV,EAAU,cAAC,IAAD,IACT,eAAC,IAAD,CAAcW,MAAM,YAAYC,UAAQ,EAAxC,UACE,cAAC,IAAaC,KAAd,CAAmBC,MAAM,QAAzB,SAAkCtC,IAClC,cAAC,IAAaqC,KAAd,CAAmBC,MAAM,QAAzB,SAAkCL,EAAQA,EAAMM,QAAU,QAG9D,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAQb,QAASC,EAAjB,gCACA,cAAC,IAAD,CAAQD,QAASE,EAAjB,uCEtBKY,EAAqB,kBAAuB,IAAIvB,SAAQ,SAACC,GAAD,OAAaC,YAAW,WAC3FD,EAAQ,GAAD,OAAIE,IAAMC,KAAKC,WAAf,YAA6BF,IAAMC,KAAKE,gBAC9C,SCLGkB,EAAanC,cACboC,EAAiBpC,YAAuB,IAEjCS,EAAW0B,EAAWzB,QDJT,kBAAuB,IAAIC,SAAQ,SAACC,GAAD,OAAaC,YAAW,WACnFD,EAAQ,GAAD,OAAIE,IAAMC,KAAKC,WAAf,YAA6BF,IAAMC,KAAKE,gBAC9C,WCIUoB,GAAe,kBAAMD,EAAe1B,OAC/CwB,GACA,WAAyB,IAAxBI,EAAuB,uDAAf,GAAIC,EAAW,uCAEtB,OADAD,EAAME,KAAKD,GACJD,EAAMG,UAJiBL,IAQrBM,GAAgBN,EAAeO,MAE/BC,GAAUT,EAAW7B,SAErBuC,GAAcT,EAAe9B,SAE7Ba,GAAa,WACxB,IAAM2B,EAAcX,EAAWhB,aACzB4B,EAAkBX,EAAejB,aACvC,OAAO2B,GAAeC,GCrBlBC,GAAQ,cAAC,IAAD,CAAQlD,KAAK,OAAOsB,QAASiB,GAA7B,kBAkBCY,GAhBC,WACd,IAAM/B,EAAUC,KACV+B,EAAON,KACPO,EAAWN,KACjB,OACE,cAAC,EAAD,CACE3B,QAASA,EACTW,MAAOqB,EACPF,MAAOA,GACPvE,MAAO,CAAE8B,MAAO,IAAK7B,OAAQ,IAJ/B,SAME,cAAC,EAAD,CAAOI,MAAOqE,OCMLF,GAlBC,WACd,IAAM/B,EAAUC,KACV+B,EAAON,KACPO,EAAWN,KACjB,OACE,eAAC,EAAD,CACEhB,MAAOqB,EACPzE,MAAO,CAAE8B,MAAO,IAAK7B,OAAQ,IAF/B,UAIE,cAAC,EAAD,CAAOI,MAAOqE,IACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAQjC,QAASA,EAASE,QAASiB,GAAnC,kBACA,cAAC,IAAD,CAAQnB,QAASA,EAASE,QAASsB,GAAnC,0BCZRjC,IACA4B,KAEA,ICamBe,GDNJ/C,GAPG,kBAChB,sBAAK5B,MAAO,CAAE4E,QAAS,QAAvB,UACE,cAACC,GAAD,IACA,cAACC,GAAD,Q,wCCPExD,GAASC,YAAa,gBAEtBC,GAAe,SAACC,GAAD,OAAYH,GAAOI,IAAID,EAAEE,OAAOV,QAE/C8D,G,gKACJ,WACE,IAAQ9D,EAAU+D,KAAKC,MAAfhE,MACR,OACC,eAAC,EAAD,WACGA,EACD,cAAC,EAAD,IACA,cAAC,IAAD,CAAOA,MAAOA,EAAOc,SAAUP,Y,GAPTI,aAqBdsD,IARIP,GAQMI,GAPF,SAACE,GACpB,IAAMhE,EAAQK,GAAOO,WACrB,OAAO,cAAC8C,GAAD,aAAa1D,MAAOA,GAAWgE,MCpBpCE,GAAiB5D,cACjB6D,GAAkB7D,cAElB8D,GAAQ,kBAAqB,IAAInD,SAAQ,SAACC,GAAD,OAAaC,YAAW,kBAAMD,EAAQ,QAAO,SAEtFmD,GAAaH,GAAelD,OAAOoD,IAEnCE,GAAcH,GAAgBnD,OAAOoD,IAErCG,GAAW,WACf,IAAM/C,EAAU0C,GAAezC,aAC/B,OAAO,cAAC,IAAD,CAAQD,QAASA,EAASE,QAAS2C,GAAnC,6BAGHG,GAAY,WAChB,IAAMhD,EAAU2C,GAAgB1C,aAChC,OAAO,cAAC,IAAD,CAAQD,QAASA,EAASE,QAAS4C,GAAnC,8BAGHG,GAAqB,WACzB,IAAMC,EAAcR,GAAezC,aAC7BkD,EAAeR,GAAgB1C,aACrC,OAAO,cAAC,IAAD,CAAQD,QAASkD,GAAeC,EAAcC,UAAQ,EAAtD,mCA2BMC,GAxBA,WACb,IAAMH,EAAcR,GAAezC,aAC7BkD,EAAeR,GAAgB1C,aAUrC,OARAqD,qBACE,WACET,KACAC,OAEF,IAIA,cAAC,EAAD,UACE,eAAC,IAAD,CAAMS,SAAUL,GAAeC,EAA/B,UACE,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,U,6BCvCFK,GAAc,CAClB,EAAG,CAAEC,GAAI,EAAGjF,MAAO,GACnB,EAAG,CAAEiF,GAAI,EAAGjF,MAAO,IAGjBT,GAAQ,EAEN2F,GAAQ,kBAAM,IAAIjE,SAAQ,SAACC,GAC/BC,WAAWD,EAAS,SAGTiE,GAAO,yCAAG,uBAAAC,EAAA,sEACfF,KADe,gCAEdF,IAFc,2CAAH,qDAKPK,GAAQ,yCAAG,6BAAAD,EAAA,sEAChBF,KADgB,cAEhBI,EAAO,CAAEL,GAAI1F,GAAOS,MAAOT,IACjCyF,GAAKzF,IAAS+F,EACd/F,IAAS,EAJa,kBAKf+F,GALe,2CAAH,qDAQRC,GAAO,yCAAG,WAAOD,GAAP,UAAAF,EAAA,sEACfF,KADe,cAErBF,GAAKM,EAAKL,IAAMK,EAFK,kBAGdN,GAAKM,EAAKL,KAHI,2CAAH,sDAMPO,GAAS,yCAAG,WAAOF,GAAP,UAAAF,EAAA,sEACjBF,KADiB,cAEvBF,GAAKM,EAAKL,IAAMQ,OAAOC,OAAOV,GAAKM,EAAKL,IAAKK,GAFtB,kBAGhBN,GAAKM,EAAKL,KAHM,2CAAH,sDAMTU,GAAU,yCAAG,WAAOV,GAAP,UAAAG,EAAA,sEAClBF,KADkB,qBAEjBF,GAAKC,GAFY,kBAGjB,MAHiB,2CAAH,sDC/BjBW,GAAatF,cACnBsF,GAAWC,KAAKV,MAGhB,IAAMW,GAAYF,GAAW5E,OAAOmE,IAE9BY,GAAaH,GAAW5E,OAC5BqE,IACA,WAAyB,IAAxBzC,EAAuB,uDAAf,GAAIC,EAAW,uCAEtB,OADAD,EAAMC,EAAOoC,IAAMpC,EACZD,KAILoD,GAAcJ,GAAW5E,OAC7BuE,IACA,WAAyB,IAAxB3C,EAAuB,uDAAf,GAAIC,EAAW,uCAEtB,OADAD,EAAMC,EAAOoC,IAAMpC,EACZD,KAILqD,GAAgBL,GAAW5E,OAC/BwE,IACA,WAAyB,IAAxB5C,EAAuB,uDAAf,GAAIC,EAAW,uCAEtB,OADAD,EAAMC,EAAOoC,IAAMpC,EACZD,KAILsD,GAAiBN,GAAW5E,OAChC2E,IACA,WAA6B,IAA5B/C,EAA2B,uDAAnB,GAAYqC,EAAO,uCAE1B,cADOrC,EAAMqC,GACNrC,KAwDIjC,GAzCG,WAChB,IAAMa,EAAUoE,GAAWnE,aAErB0E,EAbY,WAAkB,IAAjBC,EAAgB,uDAAP,GACtBC,EAAe,GAMrB,OALAZ,OAAOa,KAAKF,GAAQG,SAAQ,SAACC,GAE3B,IAAMlB,EAAOc,EAAOI,GACpBH,EAAMvD,KAAKwC,MAENe,EAMeI,CADTb,GAAWhF,YAExB,OACE,eAAC,EAAD,WACE,mBACEV,KAAM,gEACNQ,OAAO,SACPgG,IAAI,sBAHN,8BAOA,cAAC,IAAD,CACElF,QAASA,EACTmF,WAAYR,EACZS,OAAQ,cAAC,IAAD,CAAQlF,QAASoE,GAAjB,iBACRe,OAAQ,cAAC,IAAD,CAAQnF,QAASqE,GAAjB,kBACRe,WACE,SAACxB,GACC,IAAMyB,EAAW,CAAE9B,GAAIK,EAAKL,GAAIjF,MAAOsF,EAAKtF,MAAQ,GAIpD,OACE,eAAC,IAAKqC,KAAN,WACE,sBAAMtD,MAAO,CAAEiI,KAAM,GAArB,SAA2B1B,EAAKtF,QAChC,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ0B,QAPI,kBAAMsE,GAAYe,IAO9B,iBACA,cAAC,IAAD,CAAQrF,QAPM,kBAAMuE,GAAcc,IAOlC,mBACA,cAAC,IAAD,CAAQrF,QAPO,kBAAMwE,GAAeZ,EAAKL,KAOzC,iC,UC7FZgC,GAAU,SAAIC,GAAJ,OAAsB,kBAAkB,IAAIjG,SAAQ,SAACC,GACnEC,YAAW,WAAQD,EAAQgG,OAAY,UAGrCC,GAAS,EACAC,GAASH,IAAQ,WAE5B,MAAM,IAAN,OADAE,IAAU,MAIRE,GAAS,EACAC,GAASL,IAAQ,WAE5B,MAAM,IAAN,OADAI,IAAU,MCJNhH,GAASkH,eACTC,GAAQnH,GAAOW,OAAO,IAAKoG,IAC3BK,GAAQpH,GAAOW,OAAO,IAAKsG,IAyClB3G,GAvCG,WAChB,MAA8B+G,mBAAoB,KAAlD,mBAAOC,EAAP,KAAgBC,EAAhB,KACM5H,EAAQK,GAAOO,SAAS+G,GACxBE,EAAeC,uBACnB,WACEF,EAAW,KACXJ,OAEF,IAEIO,EAAeD,uBACnB,WACEF,EAAW,KACXH,OAEF,IAEF,OACE,eAAC,EAAD,WACE,8BACG,0EACD,mBACEvH,KAAM,sCACNQ,OAAO,SACPgG,IAAI,sBAHN,8BAQF,eAAC,IAAD,WACE,cAAC,IAAD,CAAQhF,QAASmG,EAAjB,mBACA,cAAC,IAAD,CAAQnG,QAASqG,EAAjB,sBAEF,cAAC,EAAD,IACC/H,M,SCnCDgI,GAAiB1H,YAAoB,CAAE8E,GAAG,EAAO6C,EAAG,GAAIC,EAAG,GAAIC,EAAG,KAElEC,GAAc,SAAC5B,EAAUxG,GAC7BgI,GAAevH,KAAI,SAACmC,GAAD,mBAAC,eAAgBA,GAAjB,mBAAyB4D,EAAMxG,QAG9CO,GAAe,SAACP,GAAD,OAAoBoI,GAAY,IAAKpI,IACpDqI,GAAc,SAAC7H,GAAD,OAAY4H,GAAY,IAAK5H,EAAEE,OAAOV,QACpDsI,GAAc,SAAC9H,GAAD,OAAY4H,GAAY,IAAK5H,EAAEE,OAAOV,QACpDuI,GAAiB,SAACvI,GAAD,OAAkBoI,GAAY,IAAKpI,IAEpDwI,GAAW,WACf,MAAuBR,GAAepH,WAA9BwE,EAAR,EAAQA,EAAG6C,EAAX,EAAWA,EAAGC,EAAd,EAAcA,EAAGC,EAAjB,EAAiBA,EACjB,OACE,eAAC,EAAD,WACE,cAAC,IAAD,CAAQM,QAASrD,EAAGtE,SAAUP,KAC9B,cAAC,EAAD,IACA,cAAC,IAAD,CAAOP,MAAOiI,EAAGnH,SAAUuH,KAC3B,cAAC,EAAD,IACA,cAAC,IAAMK,MAAP,CAAa1I,MAAOkI,EAAGpH,SAAUwH,GAAaK,QAAS,CAAC,WAAY,WAAY,UAAW,aAC3F,cAAC,EAAD,IACA,cAAC,IAASD,MAAV,CAAgBC,QAAS,CAAC,QAAS,OAAQ,UAAW3I,MAAOmI,EAAGrH,SAAUyH,SAK1EK,GAAS,WACb,MAAuBZ,GAAepH,WAA9BwE,EAAR,EAAQA,EAAG6C,EAAX,EAAWA,EAAGC,EAAd,EAAcA,EAAGC,EAAjB,EAAiBA,EACjB,OACE,cAAC,EAAD,UACE,eAAC,IAAD,CAAchG,MAAM,YAAYC,UAAQ,EAAxC,UACE,cAAC,IAAaC,KAAd,CAAmBC,MAAM,IAAzB,SAA8BuG,OAAOzD,KACrC,cAAC,IAAa/C,KAAd,CAAmBC,MAAM,IAAzB,SAA8B2F,IAC9B,cAAC,IAAa5F,KAAd,CAAmBC,MAAM,IAAzB,SAA8B4F,IAC9B,cAAC,IAAa7F,KAAd,CAAmBC,MAAM,IAAzB,SAA8B6F,EAAEW,KAAK,cAQ9BC,GAFD,kBAAM,eAAC,WAAD,WAAU,cAAC,GAAD,IAAY,cAAC,GAAD,QCnD7BC,GAAgB,SAAChJ,GAAD,OAAoC,IAAIiB,SAAQ,SAACC,EAASW,GACrFV,YACE,WACM0H,OAAOI,OAAOjJ,MAAYA,EAC5BkB,EAAQlB,GAER6B,EAAO,IAAIC,MAAM,yCAGrB,SCJEoH,GAAsB5I,YAAqB,IAO3CC,GAAe,SAACC,GAAD,OALCR,EAKwBQ,EAAEE,OAAOV,MAJrDkJ,GAAoBzI,IAAIT,QACxBkJ,GAAoBlI,OAAOgI,GAA3BE,CAA0ClJ,GAFvB,IAACA,GA4CPmJ,GAxBO,WACpB,IAAM3H,EAAU0H,GAAoBzH,aAC9BQ,EAAQiH,GAAoBhH,WAC5BlC,EAAQkJ,GAAoBtI,WAC5BwI,EAjBkB,SAAC,GAAoC,IAAlC5H,EAAiC,EAAjCA,QAASS,EAAwB,EAAxBA,MACpC,GAAc,KAD8C,EAAjBjC,MAI3C,OAAIwB,EACK,aAELS,EACK,QAEF,UAOgBoH,CAAkB,CAAE7H,UAASS,QAAOjC,UACrDsJ,EAAerH,GAASA,EAAMM,QAEpC,OACE,cAAC,EAAD,UACE,cAAC,IAAKF,KAAN,CACEkH,aAAW,EACXH,eAAgBA,EAChBI,KAAyB,eAAnBJ,EAAkC,gBAAkBE,EAH5D,SAKE,cAAC,IAAD,CACEG,YAAY,mBACZzJ,MAAOA,EACPc,SAAUP,U,WCxCdmJ,GAAqBC,aAAyB,mBAAoB,qCAElEpJ,GAAe,SAACC,GAAD,OAAYkJ,GAAmBjJ,IAAID,EAAEE,OAAOV,QAWlD4J,GATY,WACzB,IAAM5J,EAAQ0J,GAAmB9I,WACjC,OACE,cAAC,EAAD,UACE,cAAC,IAAD,CAAOZ,MAAOA,EAAOc,SAAUP,Q,WCO/BsJ,GAAqBvJ,YAAyB,IAC9CwJ,GAAcvC,eAEdwC,GAAW,iBAAc,CAC7B9E,GAAI7D,IAAM4I,OAAOC,OACjBC,QAAQ,GAAD,OAAK9I,IAAMC,KAAKC,WAAhB,YAA8BF,IAAMC,KAAKE,aAChD4I,YAAa/I,IAAMgJ,KAAKC,OAAO,IAAIC,cACnCC,OAAQ,CAAC,MAAO,WAAY,cAAe,YAAa,aAAaP,iBAAO,IAC5E7H,MAAOf,IAAMW,MAAMyI,aAKfC,GAAgBZ,GAAmB7I,QAFjB,kBAAwBC,QAAQC,QAAQwJ,gBAAM,GAAIX,QAIxE,SAACnH,EAAOC,GAAR,OAAmBA,EAAOxD,KAAI,SAACsL,GAE7B,OADAb,GAAYrJ,IAAIkK,EAAM1F,GAAI0F,GACnB,CAAE1F,GAAI0F,EAAM1F,UAIjB2F,GAAWd,GAAYlJ,SAEvBiK,GAA4B,SAAC,GAAY,IAAV5F,EAAS,EAATA,GAC7B0F,EAAQC,GAAS3F,GAEvB,OAAO,0CAAG0F,QAAH,IAAGA,OAAH,EAAGA,EAAOxI,SAGb2I,GAAiB,CACrBC,IAAK,UACLC,SAAU,UACV,cAAe,UACfC,UAAW,UACXC,UAAW,WAGPC,GAA6B,SAAC,GAAY,IAAVlG,EAAS,EAATA,GAC9B0F,EAAQC,GAAS3F,GAEvB,OACE,qBACElG,MAAO,CACLe,QAAS,WACTsL,aAAc,EACdvK,MAAO,IACPwK,UAAW,SACXC,MAAO,OAEPC,gBAAiBT,GAAc,OAACH,QAAD,IAACA,OAAD,EAACA,EAAOJ,SAR3C,gBAWGI,QAXH,IAWGA,OAXH,EAWGA,EAAOJ,UAKRiB,GAA6B,SAAC,GAAY,IAAVvG,EAAS,EAATA,GAC9B0F,EAAQC,GAAS3F,GAEvB,OAAO,0CAAG0F,QAAH,IAAGA,OAAH,EAAGA,EAAOT,WAGbuB,GAA2B,SAAC,GAAY,IAAVxG,EAAS,EAATA,GAC5B0F,EAAQC,GAAS3F,GAGvB,OAAO,mCAAG,IAAIyG,KAAJ,OAASf,QAAT,IAASA,OAAT,EAASA,EAAOR,aAAawB,oBAGnCC,GAAU,CACd,CACEzJ,MAAO,QACPqE,IAAK,QACLqF,UAAW,KACXC,OAAQ,SAAC7G,GAAD,OAAgB,cAAC,GAAD,CAAYA,GAAIA,MAE1C,CACE9C,MAAO,SACPqE,IAAK,SACLqF,UAAW,KACXC,OAAQ,SAAC7G,GAAD,OAAgB,cAAC,GAAD,CAAaA,GAAIA,MAE3C,CACE9C,MAAO,aACPqE,IAAK,YACLqF,UAAW,KACXC,OAAQ,SAAC7G,GAAD,OAAgB,cAAC,GAAD,CAAaA,GAAIA,MAE3C,CACE9C,MAAO,aACPqE,IAAK,YACLqF,UAAW,KACXC,OAAQ,SAAC7G,GAAD,OAAgB,cAAC,GAAD,CAAWA,GAAIA,OC/B5B8G,GAnEA,CAAC,CACdvF,IAAK,aACLlE,MAAO,cACP0J,UAAW,aACXrL,UAAWd,GACV,CACD2G,IAAK,WACLlE,MAAO,WACP0J,UAAW,QACXrL,UAAWsL,GACV,CACDzF,IAAK,aACLlE,MAAO,aACP0J,UAAW,QACXrL,UAAWuL,GACV,CACD1F,IAAK,WACLlE,MAAO,WACP0J,UAAW,QACXrL,UAAWwL,GACV,CACD3F,IAAK,qBACLlE,MAAO,eACP0J,UAAW,QACXrL,UAAWiJ,IACV,CACDpD,IAAK,eACLlE,MAAO,eACP0J,UAAW,QACXrL,UDyEe,WACf,IAAMa,EAAUqI,GAAmBpI,aAC7B2K,EAAevC,GAAmBjJ,WASxC,OAPAkE,qBACE,WACE2F,OAEF,IAIA,cAAC,EAAD,UACE,cAAC,KAAD,CACE4B,OAAO,KACP7K,QAASA,EACToK,QAASA,GACTjF,WAAYyF,EACZE,YAAY,QC1FjB,CACD9F,IAAK,cACLlE,MAAO,eACP0J,UAAW,WACXrL,UAAW4L,IACV,CACD/F,IAAK,kBACLlE,MAAO,mBACP0J,UAAW,WACXrL,UAAW6L,IACV,CACDhG,IAAK,iBACLlE,MAAO,kBACP0J,UAAW,WACXrL,UAAWmD,IACV,CACD0C,IAAK,UACLlE,MAAO,UACP0J,UAAW,WACXrL,UAAW8L,IACV,CACDjG,IAAK,MACLlE,MAAO,MACP0J,UAAW,WACXrL,UAAW+L,IACV,CACDlG,IAAK,gBACLlE,MAAO,iBACP0J,UAAW,WACXrL,UAAWwI,IACV,CACD3C,IAAK,OACLlE,MAAO,OACP0J,UAAW,WACXrL,UAAWgM,K,oBC5EAC,GAAarF,aAAmC,IC0C9CsF,GAjCE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,YACZC,EAAcH,GAAWnL,WAAWqL,GACpCE,EAAOJ,GAAWhM,SAASkM,GASjC,OAPAhI,qBACE,YDZoB,SAACgI,GACvB,IAAM5M,EAAI,oFAAgF4M,EAAhF,cACJG,EAAU,IAAIC,QAAQhN,GACtBiN,EAAU/I,MAAM6I,GAASG,MAAK,SAACC,GAAD,OAASA,EAAIC,UACjDV,GAAW/G,KAAKiH,EAAaK,GCSzBI,CAAST,KAEX,CAACA,IAGCC,EACK,qBAAKS,UAAWC,KAAOC,UAAvB,SAAkC,cAAC,IAAD,MAIzC,sBAAKF,UAAWC,KAAOC,UAAvB,UACE,qBAAKF,UAAS,UAAKC,KAAOT,KAAZ,YAAoBS,KAAOE,MAAzC,SACE,oBACEH,UAAWC,KAAOtL,MAClBjC,KAAI,0EAAqE4M,EAArE,cACJpG,IAAI,sBACJhG,OAAO,SAJT,UAME,cAACP,EAAA,EAAD,IACA,sBAAMqN,UAAWC,KAAO,cAAxB,uBAA+CX,EAA/C,qBAGJ,cAAC,IAAD,CAAW/M,SAAS,MAAMC,MAAOgN,Q,qBCpBjCY,GAAoBtN,YAVF,WACtB,IAAQuN,EAASrO,EAAQsO,SAAjBD,KACFE,EAAyB,KAATF,EAAcA,EAAK9K,MAAM,GAAK,KAC9CiL,EAAmBC,cAAIlC,GAAQ,CAAC,IAAK,QAC3C,OAAKgC,QAAqEG,IAApDnC,GAAOoC,MAAK,qBAAG3H,MAAkBuH,KAGhDA,EAFEC,EAK4BI,IAEjCJ,GAAmBC,cAAIlC,GAAQ,CAAC,IAAK,QAErCrK,GAAU,SAAC,GAAkB,IAAhB8E,EAAe,EAAfA,IACjBhH,EAAQ6O,QAAR,WAAoB7H,IACpBoH,GAAkBnN,IAAI+F,IAGlB8H,GAAW,SAAC,GAAD,IAAG9H,EAAH,EAAGA,IAAKlE,EAAR,EAAQA,MAAR,OAAyB,cAAC,IAAKD,KAAN,UAAsBC,GAANkE,IAmBpD+H,GAjBkB,WACtB,IAAMC,EAAcC,kBAAQ1C,GAAQ,aAEpC,OAAOtG,OAAOiJ,QAAQF,GAAanP,KAAI,YAA6B,IAAD,mBAA1B2M,EAA0B,KAAf2C,EAAe,KAC3DC,EAAgBD,EAAUtP,IAAIiP,IACpC,OAAyB,IAArBK,EAAUE,OACLD,EAGP,cAAC,IAAKE,QAAN,CAA8B3M,MAAO6J,EAArC,SACG4C,GADgB5C,MAQJ+C,GA+BNC,GA7BO,WACpB,IAAMlC,EAAcc,GAAkBhN,WAChCqO,EAAQlD,GAAOoC,MAAK,qBAAG3H,MAAkBsG,KAC/C,IAAKmC,EAEH,OADArB,GAAkBnN,IAAIuN,IACf,KAET,IAAQrN,EAAyBsO,EAAzBtO,UAAWqL,EAAciD,EAAdjD,UACnB,OACE,eAAC,IAAD,CAAQwB,UAAWC,KAAOC,UAA1B,UACE,cAAC,IAAOwB,MAAR,CAAc1B,UAAWC,KAAO0B,MAAhC,SACE,cAAC,IAAD,CACEC,KAAK,SACLC,gBAAiB,CAACrD,GAClBsD,aAAc,CAACxC,GACfpL,QAASA,GACT3C,MAAO,CAAEwQ,UAAW,OAAQC,YAAa,qBAL3C,SAOGjB,OAGL,eAAC,IAAOkB,QAAR,WACE,cAAC9O,EAAD,IACiB,eAAhBmM,GAAgC,cAAC,GAAD,CAAUA,YAAaA,WCrEnD4C,GAAM,cAAC,GAAD,I,wBCMnBC,IAAUC,iBAAiBC,KAC3BF,IAAUC,iBAAiBE,KAE3BhE,iBAAO4D,GAAKK,SAASC,eAAe,U,mBCXpCtR,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,aAAa,6BAA6B,KAAO,uBAAuB,KAAO,0B","file":"static/js/main.afba22ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AppLayout_container__U8ooG\",\"sider\":\"AppLayout_sider__2p_cC\"};","import React, { FC } from 'react';\nimport { Card as AntdCard } from 'antd';\n\nconst Card: FC<any> = ({ children, ...rest }) => (\n  <AntdCard style={{ margin: 30 }} {...rest}>{children}</AntdCard>\n);\n\nexport default Card;\n","import React from 'react';\n\nconst Divider = () => <div style={{ height: 10 }} />;\n\nexport default Divider;\n","import React, { Fragment, FC } from 'react';\n\nconst Lines: FC<{lines: string[]}> = ({ lines }) => (\n  <Fragment>\n    {lines && lines.map((f, index) => <p key={index || 0}>{f}</p>)}\n  </Fragment>\n);\n\nexport default Lines;\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import React from 'react';\nimport Refractor from 'react-refractor';\nimport { createFromIconfontCN, GithubOutlined } from '@ant-design/icons';\n\nconst IconFont = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_942570_3ol64gksd4x.js',\n});\n\nconst pre = ''\n  + 'git clone https://github.com/regionjs/region-core.git\\n'\n  + 'cd example\\n'\n  + 'npm i\\n'\n  + 'npm start\\n';\n\nconst GetStarted = () => (\n  <div style={{ padding: 32 }}>\n    <h1>How to run this</h1>\n    <Refractor language=\"bash\" value={pre} />\n    <h1>Related</h1>\n    <div style={{ fontSize: 18 }}>\n      <a href=\"https://github.com/regionjs/region-core\"><GithubOutlined /> Github</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://www.npmjs.com/package/region-core\"><IconFont type=\"npm\" /> npm</a>\n      <span style={{ margin: '0 15px' }} />\n      <a href=\"https://github.com/regionjs/region-core/blob/master/docs/Document.md\"><IconFont type=\"docs\" /> Docs</a>\n    </div>\n  </div>\n);\n\nexport default GetStarted;\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nconst Component = () => {\n  const value = region.useValue();\n  return (\n    <Card>\n      {value}\n      <Divider/>\n      <Input style={{ width: 300 }} value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Card, Divider } from '../components';\nimport { apiGetUser } from './api';\n\nconst region = createRegion();\n\nconst loadUser = region.loadBy(apiGetUser);\n\n// application initial\nloadUser();\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n\n  return (\n    <Card loading={loading}>\n      User: {value}\n      <Divider/>\n      <Button onClick={loadUser}>loadUser</Button>\n    </Card>\n  );\n};\n\nexport default Component;\n","import faker from 'faker';\n\nexport const apiGetUser = () => new Promise((resolve) => setTimeout(() => {\n  resolve(`${faker.name.lastName()} ${faker.name.firstName()}`);\n}, 1000));\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Descriptions, Button, Spin, Space } from 'antd';\nimport { Card, Divider } from '../components';\nimport { apiGetUserResolved, apiGetUserRejected } from './api';\n\nconst region = createRegion<string>();\n\n// apiGetUser may reject\nconst loadUserResolved = region.loadBy(apiGetUserResolved);\nconst loadUserRejected = region.loadBy(apiGetUserRejected);\n\nconst Component = () => {\n  const loading = region.useLoading();\n  const value = region.useValue();\n  const error = region.useError();\n\n  return (\n    <Card>\n      {loading ? <Spin /> : (\n        <Descriptions title=\"User Info\" bordered>\n          <Descriptions.Item label=\"Value\">{value}</Descriptions.Item>\n          <Descriptions.Item label=\"Error\">{error ? error.message : ''}</Descriptions.Item>\n        </Descriptions>\n      )}\n      <Divider />\n      <Space>\n        <Button onClick={loadUserResolved}>loadUser(Resolved)</Button>\n        <Button onClick={loadUserRejected}>loadUser(Rejected)</Button>\n      </Space>\n    </Card>\n  );\n};\n\nexport default Component;\n","import faker from 'faker';\n\nexport const apiGetUserResolved = (): Promise<string> => new Promise(\n  (resolve) => setTimeout(() => {\n    resolve(`${faker.name.lastName()} ${faker.name.firstName()}`);\n  },\n  1000),\n);\n\nexport const apiGetUserRejected = (): Promise<string> => new Promise(\n  (resolve, reject) => setTimeout(() => {\n    reject(new Error(faker.lorem.word()));\n  },\n  1000),\n);\n","import faker from 'faker';\n\nexport const apiGetUser = (): Promise<string> => new Promise((resolve) => setTimeout(() => {\n  resolve(`${faker.name.lastName()} ${faker.name.firstName()}`);\n}, 500));\n\nexport const apiGetNextFollower = (): Promise<string> => new Promise((resolve) => setTimeout(() => {\n  resolve(`${faker.name.lastName()} ${faker.name.firstName()}`);\n}, 1000));\n","import { createRegion } from 'region-core';\nimport { apiGetUser, apiGetNextFollower } from './api';\n\nconst userRegion = createRegion<string>();\nconst followerRegion = createRegion<string[]>([]);\n\nexport const loadUser = userRegion.loadBy(apiGetUser);\n\nexport const loadFollower = () => followerRegion.loadBy(\n  apiGetNextFollower,\n  (state = [], result) => {\n    state.push(result);\n    return state.slice();\n  },\n)();\n\nexport const clearFollower = followerRegion.reset;\n\nexport const useUser = userRegion.useValue;\n\nexport const useFollower = followerRegion.useValue;\n\nexport const useLoading = () => {\n  const userLoading = userRegion.useLoading();\n  const followerLoading = followerRegion.useLoading();\n  return userLoading || followerLoading;\n};\n","import React from 'react';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, useLoading, useUser, useFollower } from './load';\n\nconst extra = <Button type=\"link\" onClick={loadFollower}>More</Button>;\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      loading={loading}\n      title={user}\n      extra={extra}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport { Space } from 'antd';\nimport { Card, Button, Lines } from '../components';\nimport { loadFollower, clearFollower, useLoading, useUser, useFollower } from './load';\n\nconst Display = () => {\n  const loading = useLoading();\n  const user = useUser();\n  const follower = useFollower();\n  return (\n    <Card\n      title={user}\n      style={{ width: 300, margin: 30 }}\n    >\n      <Lines lines={follower} />\n      <Space>\n        <Button loading={loading} onClick={loadFollower}>More</Button>\n        <Button loading={loading} onClick={clearFollower}>Clear</Button>\n      </Space>\n    </Card>\n  );\n};\n\nexport default Display;\n","import React from 'react';\nimport Display1 from './Display1';\nimport Display2 from './Display2';\nimport { loadFollower, loadUser } from './load';\n\nloadUser();\nloadFollower();\n\nconst Component = () => (\n  <div style={{ display: 'flex' }}>\n    <Display1 />\n    <Display2 />\n  </div>\n);\n\nexport default Component;\n","import React, { Component } from 'react';\nimport { createRegion } from 'region-core';\nimport { Input, Card, Divider } from '../components';\n\nconst region = createRegion('initialValue');\n\nconst handleChange = (e: any) => region.set(e.target.value);\n\nclass ClassComponent extends Component<{value: string}> {\n  render() {\n    const { value } = this.props;\n    return (\n     <Card>\n       {value}\n       <Divider/>\n       <Input value={value} onChange={handleChange} />\n     </Card>\n    );\n  }\n}\n\nconst withValue = (ComponentIn: any) => {\n  const ComponentOut = (props: any) => {\n    const value = region.useValue();\n    return <ComponentIn value={value} {...props}/>;\n  };\n  return ComponentOut;\n};\n\nexport default withValue(ClassComponent);\n","import React, { useEffect } from 'react';\nimport { createRegion } from 'region-core';\nimport { Button, Spin, Card, Divider } from '../components';\n\nconst leftPartRegion = createRegion<null>();\nconst rightPartRegion = createRegion<null>();\n\nconst fetch = (): Promise<null> => new Promise((resolve) => setTimeout(() => resolve(null), 1000));\n\nconst handleLeft = leftPartRegion.loadBy(fetch);\n\nconst handleRight = rightPartRegion.loadBy(fetch);\n\nconst LeftPart = () => {\n  const loading = leftPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleLeft}>Load Left Part</Button>;\n};\n\nconst RightPart = () => {\n  const loading = rightPartRegion.useLoading();\n  return <Button loading={loading} onClick={handleRight}>Load Right Part</Button>;\n};\n\nconst SomethingIsLoading = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n  return <Button loading={loadingLeft || loadingRight} disabled>Something is loading</Button>;\n};\n\nconst Parent = () => {\n  const loadingLeft = leftPartRegion.useLoading();\n  const loadingRight = rightPartRegion.useLoading();\n\n  useEffect(\n    () => {\n      handleLeft();\n      handleRight();\n    },\n    [],\n  );\n\n  return (\n    <Card>\n      <Spin spinning={loadingLeft && loadingRight}>\n        <LeftPart />\n        <Divider />\n        <RightPart />\n        <Divider />\n        <SomethingIsLoading />\n      </Spin>\n    </Card>\n  );\n};\nexport default Parent;\n","interface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\n\nconst list: Shape = {\n  0: { id: 0, value: 0 },\n  1: { id: 1, value: 1 },\n};\n\nlet index = 2;\n\nconst delay = () => new Promise((resolve) => {\n  setTimeout(resolve, 500);\n});\n\nexport const getList = async () => {\n  await delay();\n  return list;\n};\n\nexport const postList = async () => {\n  await delay();\n  const item = { id: index, value: index };\n  list[index] = item;\n  index += 1;\n  return item;\n};\n\nexport const putList = async (item: Item) => {\n  await delay();\n  list[item.id] = item;\n  return list[item.id];\n};\n\nexport const patchList = async (item: Item) => {\n  await delay();\n  list[item.id] = Object.assign(list[item.id], item);\n  return list[item.id];\n};\n\nexport const deleteList = async (id: number) => {\n  await delay();\n  delete list[id];\n  return null;\n};\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Space } from 'antd';\nimport { Button, List, Card } from '../components';\nimport { getList, postList, putList, patchList, deleteList } from './mockList';\n\ninterface Item {\n  id: number;\n  value: number;\n}\n\ninterface Shape {\n  [key: number]: Item;\n}\nconst listRegion = createRegion<Shape>();\nlistRegion.load(getList());\n\n/* eslint-disable no-param-reassign */\nconst handleGet = listRegion.loadBy(getList);\n\nconst handlePost = listRegion.loadBy(\n  postList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePutBy = listRegion.loadBy(\n  putList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handlePatchBy = listRegion.loadBy(\n  patchList,\n  (state = {}, result) => {\n    state[result.id] = result;\n    return state;\n  },\n);\n\nconst handleDeleteBy = listRegion.loadBy(\n  deleteList,\n  (state = {}, result, id) => {\n    delete state[id];\n    return state;\n  },\n);\n/* eslint-enable no-param-reassign */\n\nconst deNormalize = (entity = {}) => {\n  const array: any[] = [];\n  Object.keys(entity).forEach((key) => {\n    // @ts-ignore\n    const item = entity[key];\n    array.push(item);\n  });\n  return array;\n};\n\nconst Component = () => {\n  const loading = listRegion.useLoading();\n  const list = listRegion.useValue();\n  const formattedList = deNormalize(list);\n  return (\n    <Card>\n      <a\n        href={'https://en.wikipedia.org/wiki/Representational_state_transfer'}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        What is RESTful?\n      </a>\n      <List\n        loading={loading}\n        dataSource={formattedList}\n        header={<Button onClick={handleGet}>GET</Button>}\n        footer={<Button onClick={handlePost}>POST</Button>}\n        renderItem={\n          (item) => {\n            const nextItem = { id: item.id, value: item.value + 1 };\n            const handlePut = () => handlePutBy(nextItem);\n            const handlePatch = () => handlePatchBy(nextItem);\n            const handleDelete = () => handleDeleteBy(item.id);\n            return (\n              <List.Item>\n                <span style={{ flex: 1 }}>{item.value}</span>\n                <Space>\n                  <Button onClick={handlePut}>PUT</Button>\n                  <Button onClick={handlePatch}>PATCH</Button>\n                  <Button onClick={handleDelete}>DELETE</Button>\n                </Space>\n              </List.Item>\n            );\n          }\n        }\n      />\n    </Card>\n  );\n};\n\nexport default Component;\n","const factory = <O>(func: () => O) => (): Promise<O> => new Promise((resolve) => {\n  setTimeout(() => { resolve(func()); }, 500);\n});\n\nlet countA = 0;\nexport const fetchA = factory(() => {\n  countA += 1;\n  return `A${countA}`;\n});\n\nlet countB = 0;\nexport const fetchB = factory(() => {\n  countB += 1;\n  return `B${countB}`;\n});\n","import React, { useCallback, useState } from 'react';\nimport { createMappedRegion } from 'region-core';\nimport { Space } from 'antd';\nimport { Button, Card, Divider } from '../components';\nimport { fetchA, fetchB } from './mock';\n\ntype Key = 'A' | 'B'\n\nconst region = createMappedRegion<Key, unknown>();\nconst loadA = region.loadBy('A', fetchA);\nconst loadB = region.loadBy('B', fetchB);\n\nconst Component = () => {\n  const [current, setCurrent] = useState<'A' | 'B'>('A');\n  const value = region.useValue(current);\n  const handleClickA = useCallback(\n    () => {\n      setCurrent('A');\n      loadA();\n    },\n    [],\n  );\n  const handleClickB = useCallback(\n    () => {\n      setCurrent('B');\n      loadB();\n    },\n    [],\n  );\n  return (\n    <Card>\n      <p>\n        {'stale-while-revalidate is a cache invalidation strategy popularized by '}\n        <a\n          href={'https://tools.ietf.org/html/rfc5861'}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          HTTP RFC 5861\n        </a>\n      </p>\n      <Space>\n        <Button onClick={handleClickA}>loadA</Button>\n        <Button onClick={handleClickB}>loadB</Button>\n      </Space>\n      <Divider />\n      {value}\n    </Card>\n  );\n};\n\nexport default Component;\n","import React, { Fragment } from 'react';\nimport { createRegion } from 'region-core';\nimport { Descriptions } from 'antd';\nimport { Input, Switch, Radio, Checkbox, Card, Divider } from '../components';\n\ninterface Shape {\n  a: boolean;\n  b: string;\n  c: string;\n  d: string[];\n}\nconst combinedRegion = createRegion<Shape>({ a: false, b: '', c: '', d: [] });\n\nconst setKeyValue = (key: any, value: any) => {\n  combinedRegion.set((state) => ({ ...state, [key]: value }));\n};\n\nconst handleChange = (value: boolean) => setKeyValue('a', value);\nconst handleInput = (e: any) => setKeyValue('b', e.target.value);\nconst handleRadio = (e: any) => setKeyValue('c', e.target.value);\nconst handleCheckBox = (value: any[]) => setKeyValue('d', value);\n\nconst FormCard = () => {\n  const { a, b, c, d } = combinedRegion.useValue();\n  return (\n    <Card>\n      <Switch checked={a} onChange={handleChange} />\n      <Divider />\n      <Input value={b} onChange={handleInput} />\n      <Divider />\n      <Radio.Group value={c} onChange={handleRadio} options={['Hangzhou', 'Shanghai', 'Beijing', 'Chengdu']} />\n      <Divider />\n      <Checkbox.Group options={['Apple', 'Pear', 'Orange']} value={d} onChange={handleCheckBox} />\n    </Card>\n  );\n};\n\nconst Result = () => {\n  const { a, b, c, d } = combinedRegion.useValue();\n  return (\n    <Card>\n      <Descriptions title=\"User Info\" bordered>\n        <Descriptions.Item label=\"A\">{String(a)}</Descriptions.Item>\n        <Descriptions.Item label=\"B\">{b}</Descriptions.Item>\n        <Descriptions.Item label=\"C\">{c}</Descriptions.Item>\n        <Descriptions.Item label=\"D\">{d.join(', ')}</Descriptions.Item>\n      </Descriptions>\n    </Card>\n  );\n};\n\nconst Panel = () => <Fragment><FormCard /><Result /></Fragment>;\n\nexport default Panel;\n","export const fetchValidate = (value: string): Promise<string> => new Promise((resolve, reject) => {\n  setTimeout(\n    () => {\n      if (String(Number(value)) === value) {\n        resolve(value);\n      } else {\n        reject(new Error('message from api: type some number'));\n      }\n    },\n    1000,\n  );\n});\n","import React from 'react';\nimport { createRegion } from 'region-core';\nimport { Form, Input, Card } from '../components';\nimport { fetchValidate } from './api';\n\nconst asyncValidateRegion = createRegion<string>('');\n\nconst loadValidate = (value: string) => {\n  asyncValidateRegion.set(value);\n  asyncValidateRegion.loadBy(fetchValidate)(value);\n};\n\nconst handleChange = (e: any) => loadValidate(e.target.value);\n\nconst getValidateStatus = ({ loading, error, value }: any) => {\n  if (value === '') {\n    return undefined;\n  }\n  if (loading) {\n    return 'validating';\n  }\n  if (error) {\n    return 'error';\n  }\n  return 'success';\n};\n\nconst AsyncValidate = () => {\n  const loading = asyncValidateRegion.useLoading();\n  const error = asyncValidateRegion.useError();\n  const value = asyncValidateRegion.useValue();\n  const validateStatus = getValidateStatus({ loading, error, value });\n  const errorMessage = error && error.message;\n  // TODO fix error occurs\n  return (\n    <Card>\n      <Form.Item\n        hasFeedback\n        validateStatus={validateStatus}\n        help={validateStatus === 'validating' ? 'validating...' : errorMessage}\n      >\n        <Input\n          placeholder=\"type some number\"\n          value={value}\n          onChange={handleChange}\n        />\n      </Form.Item>\n    </Card>\n  );\n};\n\nexport default AsyncValidate;\n","import React from 'react';\nimport { createLocalStorageRegion } from 'region-core';\nimport { Input, Card } from '../components';\n\nconst localStorageRegion = createLocalStorageRegion('localStorage-key', 'some value stored in localStorage');\n\nconst handleChange = (e: any) => localStorageRegion.set(e.target.value);\n\nconst LocalStorageRegion = () => {\n  const value = localStorageRegion.useValue();\n  return (\n    <Card>\n      <Input value={value} onChange={handleChange} />\n    </Card>\n  );\n};\n\nexport default LocalStorageRegion;\n","import React, { useEffect, VFC } from 'react';\nimport { random, times } from 'lodash';\nimport { Table } from 'antd';\nimport { createMappedRegion, createRegion } from 'region-core';\nimport faker from 'faker';\nimport { Card } from '../components';\n\ninterface IssueKey {\n  id: string;\n}\n\ninterface Issue {\n  id: string;\n  title: string;\n  status: string;\n  creator: string;\n  createdTime: string;\n}\n\nconst issueKeyListRegion = createRegion<IssueKey[]>([]);\nconst issueRegion = createMappedRegion<string, Issue>();\n\nconst newIssue = (): Issue => ({\n  id: faker.random.uuid(),\n  creator: `${faker.name.lastName()} ${faker.name.firstName()}`,\n  createdTime: faker.date.recent(30).toISOString(),\n  status: ['New', 'Assigned', 'In Progress', 'Completed', 'Abandoned'][random(4)],\n  title: faker.lorem.sentence(),\n});\n\nconst apiGetIssueList = (): Promise<Issue[]> => Promise.resolve(times(20, newIssue));\n\nconst loadIssueList = issueKeyListRegion.loadBy(\n  apiGetIssueList,\n  (state, result) => result.map((issue) => {\n    issueRegion.set(issue.id, issue);\n    return { id: issue.id };\n  }),\n);\n\nconst useIssue = issueRegion.useValue;\n\nconst TitleField: VFC<IssueKey> = ({ id }) => {\n  const issue = useIssue(id);\n\n  return <>{issue?.title}</>;\n};\n\nconst statusColorMap = {\n  New: '#989898',\n  Assigned: '#78cc52',\n  'In Progress': '#dbae03',\n  Completed: '#5c6c9b',\n  Abandoned: '#cc5256',\n};\n\nconst StatusLabel: VFC<IssueKey> = ({ id }) => {\n  const issue = useIssue(id);\n\n  return (\n    <div\n      style={{\n        padding: '4px 10px',\n        borderRadius: 4,\n        width: 100,\n        textAlign: 'center',\n        color: '#fff',\n        // @ts-ignore\n        backgroundColor: statusColorMap[issue?.status],\n      }}\n    >\n      {issue?.status}\n    </div>\n  );\n};\n\nconst CreatorName: VFC<IssueKey> = ({ id }) => {\n  const issue = useIssue(id);\n\n  return <>{issue?.creator}</>;\n};\n\nconst FieldText: VFC<IssueKey> = ({ id }) => {\n  const issue = useIssue(id);\n\n  // @ts-ignore\n  return <>{new Date(issue?.createdTime).toLocaleString()}</>;\n};\n\nconst columns = [\n  {\n    title: 'Title',\n    key: 'title',\n    dataIndex: 'id',\n    render: (id: string) => <TitleField id={id} />,\n  },\n  {\n    title: 'Status',\n    key: 'status',\n    dataIndex: 'id',\n    render: (id: string) => <StatusLabel id={id} />,\n  },\n  {\n    title: 'Created By',\n    key: 'creatorBy',\n    dataIndex: 'id',\n    render: (id: string) => <CreatorName id={id} />,\n  },\n  {\n    title: 'Created At',\n    key: 'creatorAt',\n    dataIndex: 'id',\n    render: (id: string) => <FieldText id={id} />,\n  },\n];\n\nconst App: VFC = () => {\n  const loading = issueKeyListRegion.useLoading();\n  const issueKeyList = issueKeyListRegion.useValue();\n\n  useEffect(\n    () => {\n      loadIssueList();\n    },\n    [],\n  );\n\n  return (\n    <Card>\n      <Table<IssueKey>\n        rowKey=\"id\"\n        loading={loading}\n        columns={columns}\n        dataSource={issueKeyList}\n        pagination={false}\n      />\n    </Card>\n  );\n};\n\nexport default App;\n","import GetStarted from '../GetStarted';\nimport UseValue from '../UseValue';\nimport UseLoading from '../UseLoading';\nimport UseError from '../UseError';\nimport SharedValue from '../SharedValue';\nimport ClassComponent from '../ClassComponent';\nimport AdvancedLoading from '../AdvancedLoading';\nimport RESTful from '../RESTful';\nimport SWR from '../SWR';\nimport Form from '../Form';\nimport AsyncValidate from '../AsyncValidate';\nimport LocalStorageRegion from '../LocalStorageRegion';\nimport MappedRegion from '../MappedRegion';\n\nconst routes = [{\n  key: 'GetStarted',\n  label: 'Get Started',\n  groupName: 'GetStarted',\n  Component: GetStarted,\n}, {\n  key: 'UseValue',\n  label: 'useValue',\n  groupName: 'Basic',\n  Component: UseValue,\n}, {\n  key: 'UseLoading',\n  label: 'useLoading',\n  groupName: 'Basic',\n  Component: UseLoading,\n}, {\n  key: 'UseError',\n  label: 'useError',\n  groupName: 'Basic',\n  Component: UseError,\n}, {\n  key: 'LocalStorageRegion',\n  label: 'localStorage',\n  groupName: 'Basic',\n  Component: LocalStorageRegion,\n}, {\n  key: 'MappedRegion',\n  label: 'mappedRegion',\n  groupName: 'Basic',\n  Component: MappedRegion,\n}, {\n  key: 'SharedValue',\n  label: 'Shared Value',\n  groupName: 'Advanced',\n  Component: SharedValue,\n}, {\n  key: 'AdvancedLoading',\n  label: 'Advanced Loading',\n  groupName: 'Advanced',\n  Component: AdvancedLoading,\n}, {\n  key: 'ClassComponent',\n  label: 'Class Component',\n  groupName: 'Advanced',\n  Component: ClassComponent,\n}, {\n  key: 'RESTful',\n  label: 'RESTful',\n  groupName: 'Advanced',\n  Component: RESTful,\n}, {\n  key: 'SWR',\n  label: 'SWR',\n  groupName: 'Advanced',\n  Component: SWR,\n}, {\n  key: 'AsyncValidate',\n  label: 'Async Validate',\n  groupName: 'Advanced',\n  Component: AsyncValidate,\n}, {\n  key: 'Form',\n  label: 'Form',\n  groupName: 'Advanced',\n  Component: Form,\n}];\n\nexport default routes;\n","import { createMappedRegion } from 'region-core';\n\nexport const codeRegion = createMappedRegion<string, string>('');\n\nexport const loadCode = (selectedKey: string) => {\n  const href = `https://raw.githubusercontent.com/regionjs/region-core/master/example/src/${selectedKey}/index.tsx`;\n  const request = new Request(href);\n  const promise = fetch(request).then((res) => res.text());\n  codeRegion.load(selectedKey, promise);\n};\n","import React, { useEffect } from 'react';\nimport { Spin } from 'antd';\nimport Refractor from 'react-refractor';\nimport { GithubOutlined } from '@ant-design/icons';\nimport styles from './External.module.css';\nimport { codeRegion, loadCode } from './codeRegion';\n\ninterface Props {\n  selectedKey: string\n}\n\nconst External = ({ selectedKey }: Props) => {\n  const codeLoading = codeRegion.useLoading(selectedKey);\n  const code = codeRegion.useValue(selectedKey);\n\n  useEffect(\n    () => {\n      loadCode(selectedKey);\n    },\n    [selectedKey],\n  );\n\n  if (codeLoading) {\n    return <div className={styles.container}><Spin /></div>;\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={`${styles.code} ${styles.dark}`}>\n        <a\n          className={styles.title}\n          href={`https://github.com/regionjs/region-core/blob/master/example/src/${selectedKey}/index.tsx`}\n          rel=\"noreferrer noopener\"\n          target=\"_blank\"\n        >\n          <GithubOutlined />\n          <span className={styles['title-text']}>{`src/${selectedKey}/index.tsx`}</span>\n        </a>\n      </div>\n      <Refractor language=\"tsx\" value={code} />\n    </div>\n  );\n};\n\nexport default External;\n","import React, { FC } from 'react';\nimport { createRegion } from 'region-core';\nimport { get, groupBy } from 'lodash';\nimport { Menu, Layout } from '../components';\nimport history from './history';\nimport routes from './routes';\nimport External from './External';\nimport styles from './AppLayout.module.css';\n\nconst initSelectedKey = () => {\n  const { hash } = history.location;\n  const initSelectKey = hash !== '' ? hash.slice(1) : null;\n  const defaultSelectKey = get(routes, ['0', 'key']);\n  if (!initSelectKey || routes.find(({ key }) => key === initSelectKey) === undefined) {\n    return defaultSelectKey;\n  }\n  return initSelectKey;\n};\n\nconst selectedKeyRegion = createRegion(initSelectedKey());\n\nconst defaultSelectKey = get(routes, ['0', 'key']);\n\nconst onClick = ({ key }: any) => {\n  history.replace(`#${key}`);\n  selectedKeyRegion.set(key);\n};\n\nconst MenuItem = ({ key, label }: any) => <Menu.Item key={key}>{label}</Menu.Item>;\n\nconst getMenuElements = () => {\n  const routeGroups = groupBy(routes, 'groupName');\n\n  return Object.entries(routeGroups).map(([groupName, routeList]) => {\n    const routeElements = routeList.map(MenuItem);\n    if (routeList.length === 1) {\n      return routeElements;\n    }\n    return (\n      <Menu.SubMenu key={groupName} title={groupName} >\n        {routeElements}\n      </Menu.SubMenu>\n    );\n  });\n  // routes.map(MenuItem);\n};\n\nconst menuElements = getMenuElements();\n\nconst AppLayout: FC = () => {\n  const selectedKey = selectedKeyRegion.useValue();\n  const route = routes.find(({ key }) => key === selectedKey);\n  if (!route) {\n    selectedKeyRegion.set(defaultSelectKey);\n    return null;\n  }\n  const { Component, groupName } = route;\n  return (\n    <Layout className={styles.container}>\n      <Layout.Sider className={styles.sider}>\n        <Menu\n          mode=\"inline\"\n          defaultOpenKeys={[groupName]}\n          selectedKeys={[selectedKey]}\n          onClick={onClick}\n          style={{ minHeight: '100%', borderRight: '1px solid #e8e8e8' }}\n        >\n          {menuElements}\n        </Menu>\n      </Layout.Sider>\n      <Layout.Content>\n        <Component />\n        {selectedKey !== 'GetStarted' && <External selectedKey={selectedKey} />}\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default AppLayout;\n","import React from 'react';\nimport AppLayout from './AppLayout';\n\nexport const app = <AppLayout />;\n","import { render } from 'react-dom';\nimport Refractor from 'react-refractor';\nimport tsx from 'refractor/lang/tsx';\nimport bash from 'refractor/lang/bash';\nimport { app } from './App';\nimport 'prism-themes/themes/prism-vsc-dark-plus.css';\nimport 'antd/dist/antd.css';\nimport './index.css';\n\nRefractor.registerLanguage(tsx);\nRefractor.registerLanguage(bash);\n\nrender(app, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"External_container__3t52A\",\"title\":\"External_title__2Zzxj\",\"title-text\":\"External_title-text__38YL_\",\"code\":\"External_code__CR0le\",\"dark\":\"External_dark__2BAR1\"};"],"sourceRoot":""}